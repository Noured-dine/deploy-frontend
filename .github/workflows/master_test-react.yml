# Workflow avec serveur Express pour servir les fichiers statiques
name: Build and deploy Node.js app to Azure Web App - test-react

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Create server.js for Azure
        run: |
          cat << EOF > server.js
          const express = require('express');
          const path = require('path');
          const app = express();
          
          // Serve static files from dist directory
          app.use(express.static(path.join(__dirname, 'dist')));
          
          // Handle client-side routing
          app.get('*', (req, res) => {
            res.sendFile(path.join(__dirname, 'dist', 'index.html'));
          });
          
          const port = process.env.PORT || 8080;
          app.listen(port, () => {
            console.log(\`Server running on port \${port}\`);
          });
          EOF
      
      - name: Create production package.json
        run: |
          cat << EOF > package.json
          {
            "name": "react-azure-app",
            "version": "1.0.0",
            "description": "React app for Azure deployment",
            "main": "server.js",
            "scripts": {
              "start": "node server.js"
            },
            "dependencies": {
              "express": "^4.18.2"
            },
            "engines": {
              "node": "22.x"
            }
          }
          EOF
      
      - name: Install production dependencies
        run: npm install --production
      
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: |
            dist/
            server.js
            package.json
            node_modules/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download deployment package
        uses: actions/download-artifact@v4
        with:
          name: deployment-package
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_06EAC86536E1453D82DCAB5247F0FBCC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_3393CC8019F0426EA37894C492723C9B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_471B082459644FD7B417F2BE2F6535AB }}
      
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'test-react'
          slot-name: 'Production'
          package: .
          startup-file: 'node server.js'
